syntax = "proto3";

package keystroke;

message KeyPress {
  string value = 1;
  int32 pressDuration = 2;
  int32  waitDuration = 3;
  bool shift = 4;
  bool ctrl = 5;
  bool alt = 6;
  bool meta = 7;
}

message TrainStats {
  int32 samples = 1;
  float finalLoss = 2;
  float minLoss = 3;
  float maxLoss = 4;
  float avgLoss = 5;
  float stdLoss = 6;
}

message Attempt {
  repeated KeyPress keyPresses = 1;
}

message TrainRequest {
  repeated Attempt attempts = 1;
  string email = 2;
}

message TrainResponse {
  string message = 1;
  TrainStats stats = 2;
  string id = 3;
}

//train end
message ModelCountRequest {
  string email = 1;
}

message ModelCountResponse {
  int32 count = 1;
}
// model count end

message DeleteModelRequest {
  string email = 1;
  string modelName = 2;
}

message DeleteModelResponse {
  string message = 1;
  bool success = 2;
}

//delete end
message EvaluateStats {
  int32 samples = 1;
  float pressAvg = 2;
  float pressStd = 3;
  float waitAvg = 4;
  float waitStd = 5;
}

message EvaluationAttempt {
  repeated KeyPress keyPresses = 1;
  bool isAnomalous = 2;
  float score = 3;
  string message = 4;
}

message EvaluateRequest {
  repeated Attempt attempts = 1;
}

message EvaluateResponse {
  string message = 1;
  EvaluateStats stats = 2;
  repeated EvaluationAttempt results = 3;
  repeated string anomalies = 4;
}


//evaluate data end
service KeystrokeService {
  rpc Train (TrainRequest) returns (TrainResponse);
  rpc GetModelCount (ModelCountRequest) returns (ModelCountResponse);
  rpc DeleteModel(DeleteModelRequest) returns (DeleteModelResponse);
  rpc Evaluate(EvaluateRequest) returns (EvaluateResponse);
}